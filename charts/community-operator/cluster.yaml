---
apiVersion: mongodbcommunity.mongodb.com/v1
kind: MongoDBCommunity
metadata:
  name: {{ .Values.resource.name }}
  namespace: {{ .Values.database.namespace }}
spec:
  members: {{ .Values.resource.members }}
  type: ReplicaSet
  version: {{ .Values.resource.version }}
{{- if .Values.resource.prometheus.enabled }}
  prometheus:
    # Metrics endpoint HTTP Basic Auth username
    username: {{ .Values.resource.prometheus.username }}

    # Metrics endpoint HTTP Basic Auth password
    passwordSecretRef:
      name: metrics-endpoint-password

    # Optional, defaults to `/metrics`
    metricsPath: {{ .Values.resource.prometheus.metricsPath }}

    # Optional defaults to 9216
    port: {{ .Values.resource.prometheus.port }}

    # Prometheus endpoint can be configured to use HTTPS
    # tlsSecretKeyRef:
    #   name: "<kubernetes.io/tls secret name>"
{{- end }}
  security:
    authentication:
      modes: ["SCRAM"]
  users:
    - name: qc_master
      db: admin
      passwordSecretRef: # a reference to the secret that will be used to generate the user's password
        name: qc_master
      roles:
        - name: root
          db: admin
      scramCredentialsSecretName: my-scram

    - name: {{ .Values.resource.user.username }}
      db: admin
      passwordSecretRef: # a reference to the secret that will be used to generate the user's password
        name: {{ .Values.resource.user.username }}
      roles:
        - name: root
          db: admin
      scramCredentialsSecretName: my-scram


  additionalMongodConfig:
    net:
      port: {{ .Values.resource.additionalMongodConfig.port }}
    storage:
      wiredTiger:
        engineConfig:
          journalCompressor: zlib  # 数据压缩算法，不可更改
    replication:
      oplogSizeMB: {{ .Values.resource.additionalMongodConfig.oplogSizeMB }} # oplogSize 可修改，建议值: 磁盘大小的 5%

  statefulSet:
    spec:
      template:
        spec:
          initContainers:
            - name: mongod-posthook
              imagePullPolicy: {{ .Values.registry.pullPolicy}}
            - name: mongodb-agent-readinessprobe
              imagePullPolicy: {{ .Values.registry.pullPolicy}}
          containers:
            - name: mongod
              imagePullPolicy: {{ .Values.registry.pullPolicy}}
              resources:
                limits:
                  cpu: "8"
                  memory: 16G
                requests:
                  cpu: {{ .Values.resource.statefulSet.mongod.cpu }}
                  memory: {{ .Values.resource.statefulSet.mongod.memory }}
            - name: {{ .Values.registry.pullPolicy}}
              imagePullPolicy: {{ .Values.registry.pullPolicy}}
              resources:
                limits:
                  cpu: "0.2"
                  memory: 250M
                requests:
                  cpu: {{ .Values.resource.statefulSet.agent.cpu }}
                  memory: {{ .Values.resource.statefulSet.agent.memory }}
          imagePullSecrets:
            - name: {{ .Values.registry.secretName }}  # 自定义镜像仓库 secret 配置， 需要提前创建该 secret

{{ if eq (.Values.action) "create" }}
          volumeClaimTemplates:
            - metadata:
                name: data-volume
              spec:
                accessModes:
                  - ReadWriteOnce
                resources:
                  requests:
                    storage: {{ .Values.resource.statefulSet.volumeClaimTemplates.storage }}  # 存储空间， 可修改
{{ end }}

# the user credentials will be generated from this secret
# once the credentials are generated, this secret is no longer required
---
apiVersion: v1
kind: Secret
metadata:
  name: qc_master
type: Opaque
stringData:
  password: Zhu1241jie@

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.resource.user.username }}
type: Opaque
stringData:
  password: {{ .Values.resource.user.password }}

# Secret holding the prometheus metrics endpoint HTTP Password.
---
apiVersion: v1
kind: Secret
metadata:
  name: metrics-endpoint-password
type: Opaque
stringData:
  password: {{ .Values.resource.prometheus.password }}